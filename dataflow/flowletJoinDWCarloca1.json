{
	"name": "flowletJoinDWCarloca1",
	"properties": {
		"type": "Flowlet",
		"typeProperties": {
			"sources": [],
			"sinks": [],
			"transformations": [
				{
					"name": "veiculoitem"
				},
				{
					"name": "loccliente"
				},
				{
					"name": "loctpcliente"
				},
				{
					"name": "locbanco"
				},
				{
					"name": "locAGEBCO"
				},
				{
					"name": "locfuncionario"
				},
				{
					"name": "locdepto"
				},
				{
					"name": "loccargo"
				},
				{
					"name": "locgerente"
				},
				{
					"name": "locagencia"
				},
				{
					"name": "loccidade"
				},
				{
					"name": "locestado"
				},
				{
					"name": "locTpAutomovel"
				},
				{
					"name": "loctpcombustivel"
				},
				{
					"name": "loccor"
				},
				{
					"name": "locproprietario"
				},
				{
					"name": "locmodelo"
				},
				{
					"name": "locfabricante"
				},
				{
					"name": "locgrupo"
				},
				{
					"name": "locveiculo"
				},
				{
					"name": "locitemlocacao"
				},
				{
					"name": "locpedidolocacao"
				},
				{
					"name": "outputSilver"
				},
				{
					"name": "output1"
				},
				{
					"name": "output2"
				},
				{
					"name": "output3"
				}
			],
			"scriptLines": [
				"input(output(",
				"          Cd_cliente as integer,",
				"          Nm_Cliente as string,",
				"          Cd_Tp_Cliente as integer,",
				"          Nr_Estrelas as integer,",
				"          Nr_Habilitacao as integer",
				"     ),",
				"     order: 0) ~> loccliente",
				"input(output(",
				"          cd_Tp_Cliente as integer,",
				"          Nm_Tp_Cliente as string",
				"     ),",
				"     order: 1) ~> loctpcliente",
				"input(output(",
				"          cd_Banco as integer,",
				"          Nm_Banco as string,",
				"          url as string",
				"     ),",
				"     order: 2) ~> locbanco",
				"input(output(",
				"          cd_agencia as integer,",
				"          Nm_Agencia as string,",
				"          cd_banco as integer",
				"     ),",
				"     order: 3) ~> locAGEBCO",
				"input(output(",
				"          Cd_Func as integer,",
				"          Nm_Func as string,",
				"          Dt_Inicio as timestamp,",
				"          Cd_Gerente as integer,",
				"          Nr_CPF as integer,",
				"          Vl_Salario as decimal(38,18),",
				"          Vl_Perc_Comissao as decimal(38,18),",
				"          Cd_Depto as integer,",
				"          Cd_Cargo as integer",
				"     ),",
				"     order: 4) ~> locfuncionario",
				"input(output(",
				"          Cd_Depto as integer,",
				"          Nm_Depto as string,",
				"          Vl_Orc_Depto as decimal(38,18)",
				"     ),",
				"     order: 5) ~> locdepto",
				"input(output(",
				"          Cd_Cargo as integer,",
				"          Nm_Cargo as string",
				"     ),",
				"     order: 6) ~> loccargo",
				"input(output(",
				"          Cd_Func as integer,",
				"          Nm_Func as string,",
				"          Dt_Inicio as timestamp,",
				"          Cd_Gerente as integer,",
				"          Nr_CPF as integer,",
				"          Vl_Salario as decimal(38,18),",
				"          Vl_Perc_Comissao as decimal(38,18)",
				"     ),",
				"     order: 7) ~> locgerente",
				"input(output(",
				"          cd_Agencia as integer,",
				"          Nm_Agencia as string,",
				"          cd_Cidade as integer",
				"     ),",
				"     order: 8) ~> locagencia",
				"input(output(",
				"          Cd_Cidade as integer,",
				"          Nm_Cidade as string,",
				"          Cd_Estado as integer",
				"     ),",
				"     order: 9) ~> loccidade",
				"input(output(",
				"          Cd_Estado as integer,",
				"          Nm_Estado as string,",
				"          Sigla_Estado as string",
				"     ),",
				"     order: 10) ~> locestado",
				"input(output(",
				"          cd_Tp_Automovel as integer,",
				"          Nm_Tp_Automovel as string",
				"     ),",
				"     order: 11) ~> locTpAutomovel",
				"input(output(",
				"          cd_Tp_Combustivel as integer,",
				"          Nm_Tp_Combustivelcol as string",
				"     ),",
				"     order: 12) ~> loctpcombustivel",
				"input(output(",
				"          cd_Cor as integer,",
				"          Desc_Cor as string",
				"     ),",
				"     order: 13) ~> loccor",
				"input(output(",
				"          cd_proprietario as integer,",
				"          Nm_Proprietario as string,",
				"          Nr_CPF as integer",
				"     ),",
				"     order: 14) ~> locproprietario",
				"input(output(",
				"          cd_Modelo as integer,",
				"          Nm_Modelo as string,",
				"          cd_Fabricante as integer",
				"     ),",
				"     order: 15) ~> locmodelo",
				"input(output(",
				"          cd_Fabricante as integer,",
				"          Nm_Fabricante as string",
				"     ),",
				"     order: 16) ~> locfabricante",
				"input(output(",
				"          cd_Grupo as integer,",
				"          Nm_Grupo as string",
				"     ),",
				"     order: 17) ~> locgrupo",
				"input(output(",
				"          Nr_Placa as string,",
				"          Cd_Proprietario as integer,",
				"          Nr_Chassis as string,",
				"          Status as string,",
				"          Km_Atual as integer,",
				"          Tp_Automovel as integer,",
				"          Tp_Combustivel as integer,",
				"          cd_Modelo as integer,",
				"          cd_cor as integer,",
				"          cd_grupo as integer,",
				"          Vl_Diaria as decimal(38,18)",
				"     ),",
				"     order: 18) ~> locveiculo",
				"input(output(",
				"          Nr_Pedido as integer,",
				"          Nr_Placa as string,",
				"          Vl_Diaria as decimal(38,18),",
				"          Vl_Diaria_Calc as decimal(38,18)",
				"     ),",
				"     order: 19) ~> locitemlocacao",
				"input(output(",
				"          Nr_Pedido as integer,",
				"          Dt_Locacao as timestamp,",
				"          Cd_Cliente as integer,",
				"          Cd_Agencia as integer,",
				"          Qt_Dias as integer,",
				"          Vl_Total as decimal(38,18),",
				"          Status as string,",
				"          Dt_Retirada as timestamp,",
				"          Dt_Entrega as timestamp,",
				"          Cd_Func as integer,",
				"          Dt_Pagto as timestamp,",
				"          Cd_Age_Bco as integer",
				"     ),",
				"     order: 20) ~> locpedidolocacao",
				"locveiculo, locitemlocacao join(locveiculo@Nr_Placa == locitemlocacao@Nr_Placa,",
				"     joinType:'inner',",
				"     broadcast: 'auto')~> veiculoitem",
				"loccliente output() ~> outputSilver",
				"locbanco output() ~> output1",
				"locfuncionario output() ~> output2",
				"veiculoitem output() ~> output3"
			]
		}
	}
}